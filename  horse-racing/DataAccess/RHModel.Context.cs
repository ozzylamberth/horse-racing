//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;
using DataEntities;

namespace DataAccess
{
    public partial class apuestasEntities : ObjectContext
    {
        public const string ConnectionString = "name=apuestasEntities";
        public const string ContainerName = "apuestasEntities";
    
        #region Constructors
    
        public apuestasEntities()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public apuestasEntities(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public apuestasEntities(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<entidad> entidad
        {
            get { return _entidad  ?? (_entidad = CreateObjectSet<entidad>("entidad")); }
        }
        private ObjectSet<entidad> _entidad;
    
        public ObjectSet<menu> menu
        {
            get { return _menu  ?? (_menu = CreateObjectSet<menu>("menu")); }
        }
        private ObjectSet<menu> _menu;
    
        public ObjectSet<parametros_app> parametros_app
        {
            get { return _parametros_app  ?? (_parametros_app = CreateObjectSet<parametros_app>("parametros_app")); }
        }
        private ObjectSet<parametros_app> _parametros_app;
    
        public ObjectSet<perfiles> perfiles
        {
            get { return _perfiles  ?? (_perfiles = CreateObjectSet<perfiles>("perfiles")); }
        }
        private ObjectSet<perfiles> _perfiles;
    
        public ObjectSet<usuario> usuario
        {
            get { return _usuario  ?? (_usuario = CreateObjectSet<usuario>("usuario")); }
        }
        private ObjectSet<usuario> _usuario;
    
        public ObjectSet<numerosfacturas> numerosfacturas
        {
            get { return _numerosfacturas  ?? (_numerosfacturas = CreateObjectSet<numerosfacturas>("numerosfacturas")); }
        }
        private ObjectSet<numerosfacturas> _numerosfacturas;
    
        public ObjectSet<ventas> ventas
        {
            get { return _ventas  ?? (_ventas = CreateObjectSet<ventas>("ventas")); }
        }
        private ObjectSet<ventas> _ventas;

        #endregion
    }
}
